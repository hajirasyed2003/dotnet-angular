casestudy9

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LinqCodeTemplate
{
    internal class Problem1
    {
        static void Main()
        {
            Product product = new Product();
            var products = product.GetProducts();
            Console.WriteLine("1.Write a LINQ query to search and display all products with category “FMCG”");
            var result = products.Where(p => p.ProCategory == "FMCG").ToList();
            foreach (var item in result)
            {
                Console.WriteLine($"{item.ProCode}\t{item.ProName}\t{item.ProMrp}");
            }

            Console.WriteLine("2. Write a LINQ query to search and display all products with category “Grain”");
            var result2 = products.Where(p => p.ProCategory == "Grain").ToList();
            foreach (var item in result2)
            {
                Console.WriteLine($"{item.ProCode}\t{item.ProName}\t{item.ProMrp}");
            }

            Console.WriteLine("3. Write a LINQ query to sort products in ascending order by product code.");
            var result3 = products.OrderBy(p => p.ProCode);
            foreach (var item in result3)
            {
                Console.WriteLine($"{item.ProCode}\t{item.ProName}\t{item.ProMrp}\t{item.ProCategory}");
            }

            Console.WriteLine("4. Write a LINQ query to sort products in ascending order by product Category.");
            var result4 = products.OrderBy(p => p.ProCategory);
            foreach (var item in result4)
            {
                Console.WriteLine($"{item.ProCode}\t{item.ProName}\t{item.ProMrp}\t{item.ProCategory}");
            }

            Console.WriteLine("Write a LINQ query to sort products in ascending order by product Mrp. ");
            var result5 = products.OrderBy(p => p.ProMrp);
            foreach (var item in result5)
            {
                Console.WriteLine($"{item.ProCode}\t{item.ProName}\t{item.ProMrp}\t{item.ProCategory}");
            }

            Console.WriteLine("6. Write a LINQ query to sort products in descending order by product Mrp. ");
            var result6 = products.OrderByDescending(p => p.ProMrp);
            foreach (var item in result6)
            {
                Console.WriteLine($"{item.ProCode}\t{item.ProName}\t{item.ProMrp}\t{item.ProCategory}");
            }

            Console.WriteLine("7. Write a LINQ query to display products group by product Category. ");
            var result7 = products.GroupBy(p => p.ProCategory);
            foreach (var item in result7)
            {
                Console.WriteLine($"Product Category: {item.Key}");
                foreach (var i in item)
                {
                    Console.WriteLine($"{i.ProCode}\t{i.ProName}\t{i.ProMrp}");
                }
            
            }

            Console.WriteLine("8. Write a LINQ query to display products group by product Mrp. ");
            var result8 = products.GroupBy(p => p.ProMrp);
            foreach (var item in result8)
            {
                Console.WriteLine($"Product Category: {item.Key}");
                foreach (var i in item)
                {
                    Console.WriteLine($"{i.ProCode}\t{i.ProName}\t{i.ProCategory}");
                }

            }

            Console.WriteLine("9. Write a LINQ query to display product detail with highest price in FMCG category");
            var r = products.Where(p => p.ProCategory == "FMCG").OrderByDescending(p=>p.ProMrp).FirstOrDefault();
            Console.WriteLine($"{r.ProCode}\t{r.ProName}\t{r.ProMrp}\t{r.ProCategory}");

            Console.WriteLine("10. Write a LINQ query to display count of total products. ");
            var result10 = products.Count();
            Console.WriteLine("Total Number of Products:" + result10);

            Console.WriteLine("11. Write a LINQ query to display count of total products with category FMCG. ");
            var result11 = products.Where(p=>p.ProCategory=="FMCG").Count();
            Console.WriteLine("Total Number of Products:" + result11);

            Console.WriteLine("12.Write a LINQ query to display Max price.  ");
            var result12 = products.Max(p => p.ProMrp);
            Console.WriteLine("Max price:" + result12);

            Console.WriteLine("13.Write a LINQ query to display Min price.  ");
            var result13 = products.Min(p => p.ProMrp);
            Console.WriteLine("Min price:" + result13);

            Console.WriteLine("14. Write a LINQ query to display whether all products are below Mrp Rs.30 or not.");
            var result14 = products.All(p=>p.ProMrp<30);
            Console.WriteLine(result14?"All are below 30":"All are not below 30");

            Console.WriteLine("15. Write a LINQ query to display whether any products are below Mrp Rs.30 or not. ");
            var result15 = products.Any(p => p.ProMrp < 30);
            Console.WriteLine(result15? "Some are below 30" : "None are below 30");

            Console.ReadLine();

        }
    }
}
